{"version":3,"file":"static/js/735.aa8bb671.chunk.js","mappings":"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","sources":["webpack://client/./src/components/UI/container.module.css?8988","components/UI/container.js","webpack://client/./src/components/poll/profile/profile.module.css?a109","components/poll/profile/pollresultPage.js","components/poll/profile/profilePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"conatiner\":\"container_conatiner__xS-Ti\"};","import React from \"react\";\r\nimport classes from \"./container.module.css\";\r\nconst Container = (props) => {\r\n  return <div className={classes.conatiner}>{props.children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Img\":\"profile_Img__a2+g1\",\"h4\":\"profile_h4__okSrB\",\"optionlist\":\"profile_optionlist__70P9p\",\"optionItem\":\"profile_optionItem__uUWhC\"};","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Container from \"../../UI/container\";\r\nimport classes from \"./profile.module.css\";\r\nimport AuthContext from \"../../../store/context-api\";\r\n\r\nconst ResultPage = () => {\r\n  const [count, setCount] = useState({});\r\n  const [ArryOfPoll, setArrayOfPoll] = useState([]);\r\n  const AuthCtx = useContext(AuthContext);\r\n  const token = AuthCtx.token;\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const getPollData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://deployevelocity-project.onrender.com/api/v1/polls/create\",\r\n          {\r\n            headers: { Authorization: token },\r\n          }\r\n        );\r\n        const pollData = await response.json();\r\n        setArrayOfPoll(pollData.data);\r\n\r\n        // Initialize count with initial poll data\r\n        const initialCounts = {};\r\n        pollData.data.forEach((poll) => {\r\n          if (typeof poll.voteCounts === \"object\" && poll.voteCounts !== null) {\r\n            initialCounts[poll._id] = poll.voteCounts;\r\n          }\r\n        });\r\n        setCount(initialCounts);\r\n        // console.log(\"Initial counts:\", initialCounts);\r\n      } catch (error) {\r\n        console.error(\"Error fetching polls:\", error);\r\n      }\r\n    };\r\n\r\n    getPollData();\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    if (!socketRef.current) {\r\n      socketRef.current = io(\"https://deployevelocity-project.onrender.com\", {\r\n        query: { token },\r\n      });\r\n\r\n      socketRef.current.on(\"voteUpdate\", ({ pollId, voteCounts }) => {\r\n        console.log(\"voteUpdate event received:\", { pollId, voteCounts });\r\n        setCount((prevCounts) => ({\r\n          ...prevCounts,\r\n          [pollId]: voteCounts,\r\n        }));\r\n      });\r\n\r\n      socketRef.current.on(\"voteError\", ({ message }) => {\r\n        console.error(\"Error:\", message);\r\n      });\r\n\r\n      return () => {\r\n        socketRef.current.disconnect();\r\n      };\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <div>\r\n      {ArryOfPoll.map((item) => (\r\n        <Container key={item._id} className={classes.conatiner2}>\r\n          <div>\r\n            <h2>{item.question}</h2>\r\n            <div className={classes.optionlist}>\r\n              {item.options.map((option, index) => (\r\n                <div key={index} className={classes.optionItem}>\r\n                  <span>{option}</span>\r\n                  <span>{count[item._id]?.[option] || 0}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultPage;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport Container from \"../../UI/container\";\r\nimport classes from \"./profile.module.css\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../../../store/context-api\";\r\nimport ResultPage from \"./pollresultPage\";\r\n\r\nconst ProfilePage = () => {\r\n  const AuthCtx = useContext(AuthContext);\r\n  const [profileName, setProfileName] = useState(\"\");\r\n  const [profileEmail, setProfileEmail] = useState(\"\");\r\n  const [profilePic, setProfilePic] = useState(null);\r\n\r\n  const token = AuthCtx.token;\r\n  useEffect(() => {\r\n    const getuserprofile = async () => {\r\n      const response = await axios.get(\r\n        \"https://deployevelocity-project.onrender.com/api/v1/users/user-profile\",\r\n        { headers: { Authorization: token } }\r\n      );\r\n      // console.log(\"reponseemail>>>>>\", response.data.data);\r\n      setProfileName(response.data.data.username);\r\n      setProfileEmail(response.data.data.email);\r\n      setProfilePic(response.data.data.profilePicture);\r\n    };\r\n    getuserprofile();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div>\r\n          <img className={classes.Img} src={profilePic} alt=\"Error\" />\r\n        </div>\r\n        <h4 className={classes.h4}>Name: {profileName}</h4>\r\n        <h4 className={classes.h4}>Email: {profileEmail}</h4>\r\n      </Container>\r\n      <ResultPage />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["props","_jsx","className","classes","children","ResultPage","count","setCount","useState","ArryOfPoll","setArrayOfPoll","token","useContext","AuthContext","socketRef","useRef","useEffect","async","response","fetch","headers","Authorization","pollData","json","data","initialCounts","forEach","poll","voteCounts","_id","error","console","getPollData","current","io","query","on","_ref","pollId","log","prevCounts","_ref2","message","disconnect","map","item","Container","conatiner2","_jsxs","question","optionlist","options","option","index","_count$item$_id","optionItem","ProfilePage","AuthCtx","profileName","setProfileName","profileEmail","setProfileEmail","profilePic","setProfilePic","axios","get","username","email","profilePicture","getuserprofile","_Fragment","Img","src","alt","h4"],"sourceRoot":""}